<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	
	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:configs/jdbc.properties" ignore-unresolvable="true" />
	

	<!--创建jdbc数据源 -->
	<bean id="orm.dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${password}" />
		<property name="maxActive" value="${maxActive}" />  
        <property name="initialSize" value="${initialSize}" />  
        <property name="maxWait" value="${maxWait}" />  
        <property name="maxIdle" value="${maxIdle}" />  
        <property name="minIdle" value="${minIdle}" />  
        <property name="removeAbandoned" value="${removeAbandoned}" />  
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />  
        <property name="testWhileIdle" value="${testWhileIdle}" />
        <property name="testOnBorrow" value="${testOnBorrow}" />
        <property name="testOnReturn" value="${testOnReturn}" />
        <property name="validationQuery" value="${validationQuery}" />
        <property name="validationQueryTimeout" value="${validationQueryTimeout}" />
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
        <property name="numTestsPerEvictionRun" value="${numTestsPerEvictionRun}" />
	</bean>
	
	
	
	<!-- JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name="dataSource" ref="orm.dataSource"></property>
	</bean>
	

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="orm.transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="orm.dataSource" />
	</bean>
	

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="orm.sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="orm.dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:demo/proj/orm/xml/base/*.xml</value>
				<value>classpath:demo/proj/orm/xml/extend/*.xml</value>
			</list>
		</property>
        <property name="configLocation" value="classpath:demo/proj/mybatis-config.xml"/>
	</bean>
	
	<!-- 可通过注解控制事务 -->
	<tx:annotation-driven />
	

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="demo.proj.orm" />
		<property name="sqlSessionFactoryBeanName" value="orm.sqlSessionFactory" />
	</bean>
	
	
	
	
	
  	<!-- 事务约定 -->
	<tx:advice id="orm.userTxAdvice" transaction-manager="orm.transactionManager">
		<tx:attributes>
			
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
                            
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
			<tx:method name="sel*" propagation="SUPPORTS" />
			
		</tx:attributes>
	</tx:advice>
  	<!-- 事务控制在service层 -->
	<aop:config>    
		<aop:pointcut id="pc" expression="execution(public * demo.proj.service.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="orm.userTxAdvice" />
	</aop:config>
	
	
	
	
	
	
	
	
	
	
	
</beans>