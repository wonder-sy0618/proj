<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.proj.orm.dao.TeachingMapper">
  <resultMap id="BaseResultMap" type="demo.proj.orm.model.TeachingKey">
    <id jdbcType="INTEGER" column="student_id" property="studentId"/>
    <id jdbcType="INTEGER" column="teacher_id" property="teacherId"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach item="criteria" collection="oredCriteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach item="criterion" collection="criteria.criteria">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach open="(" item="listItem" collection="criterion.value" separator="," close=")">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach item="criteria" collection="example.oredCriteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach item="criterion" collection="criteria.criteria">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach open="(" item="listItem" collection="criterion.value" separator="," close=")">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, teacher_id
  </sql>
  <select id="selectByExample" parameterType="demo.proj.orm.model.TeachingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from teaching
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="orderByClause == null">
	 order by student_id,teacher_id 
	</if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="demo.proj.orm.model.TeachingKey">
    delete from teaching
    where student_id = #{studentId,jdbcType=INTEGER}
      and teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="demo.proj.orm.model.TeachingExample">
    delete from teaching
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="demo.proj.orm.model.TeachingKey" keyProperty="studentId,teacherId" useGeneratedKeys="true">
    insert into teaching (student_id, teacher_id)
    values (#{studentId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="demo.proj.orm.model.TeachingKey" keyProperty="studentId,teacherId" useGeneratedKeys="true">
    insert into teaching
    <trim suffixOverrides="," prefix="(" suffix=")">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
    </trim>
    <trim suffixOverrides="," prefix="values (" suffix=")">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.proj.orm.model.TeachingExample" resultType="java.lang.Integer">
    select count(*) from teaching
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teaching
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teaching
    set student_id = #{record.studentId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
</mapper>
